########################################################################
# How to reset autotest instance                                       #
########################################################################

# Run vagrant:
vagrant up
vagrant ssh

cd /var/ngeob_autotest/
./reset_db.sh


########################################################################
# How to run tests                                                     #
########################################################################

cd /var/ngeob_autotest/
python manage.py test config -v3

#Send browse reports via:
curl -d @<filename> http://<URL>/browse/ingest


########################################################################
# How to load test data (run from host machine)                        #
########################################################################

cd ngeo-b_autotest/data/
./load_test_data.sh

# or:
curl --digest -u username:password -T <PATH-TO-BROWSE-IMAGE> <URL>/store
# and one of:
curl -d @<PATH-TO-BROWSE-REPORT> <URL>/browse/ingest
python manage.py ngeo_ingest_browse_report <PATH-TO-BROWSE-REPORT>


########################################################################
# How to test authorization                                            #
########################################################################

# Set <template> of <auth_method> in /var/www/cache/mapcache.xml to
<template>/usr/bin/python /usr/bin/request_authorization.py -b http://127.0.0.1:8000/authorized -u :user -l :tileset</template>
# or:
<template>/usr/bin/python /usr/bin/request_authorization.py -b http://127.0.0.1:8000/not_authorized -u :user -l :tileset</template>

cd /var/ngeob_autotest/
python manage.py ngeo_browse_layer data/auth/protectedLayers.xml

cd /var/ngeob_autotest/data/auth/
python -m SimpleHTTPServer

# Send test request from host and check result as well as log output of SimpleHTTPServer
curl -o out -H "SP-Person-Identifier:test" "http://localhost:3080/c/wmts/?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=TEST_SAR&STYLE=default&TILEMATRIXSET=WGS84&TILEMATRIX=0&TILEROW=0&TILECOL=0&FORMAT=image%2Fpng"


########################################################################
# How to generate test data package (on host machine)                  #
########################################################################

cd ngeo-b_autotest/data/
git archive --format=tar --prefix=ngeo_browse_server_test_data_20140516/ master | gzip > ngeo_browse_server_test_data_20140516.tar.gz


########################################################################
# How to generate test data                                            #
########################################################################

python ../tools/download-eoli-browse.py --browse-type TESTTYPE --skip-existing --browse-report tmp_report.xml ../tools/eoli.csv tmp/
xmllint --noout --schema schemas/IF-ngEO-BrowseReport-1.1.xsd tmp_report.xml


########################################################################
# How to run JMeter tests (on host machine)                            #
########################################################################

# Get test data (browse reports and browse images)
# Store browse reports local
# Store browse images in VM
cd ngeo-b_autotest/integration_tests # Important because of relative paths in tests!
jmeter &
# Load ingestion test plan "performance_ingest.jmx"
# Configure test plan. Optional leave the relative paths.
# Run test plan (<strg>-<r>)
# Evaluate logs
# Repeat for retrieval test plan "performance_retrieval.jmx"


########################################################################
# How to warp browse image                                             #
########################################################################

gdal_translate -gcp 0 0 -2.79 52.86 -gcp 487 0 -1.22 53.08 -gcp 487 1728 -0.03 49.68 -gcp 0 1728 -1.49 49.46 ASA_IM__0P_20100722_213840.jpg tmp.tif
gdalwarp tmp.tif ASA_IM__0P_20100722_213840.tif
